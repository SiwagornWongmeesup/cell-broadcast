"use client";
import { useState } from "react";

export default function DisasterGuide() {
  const [selected, setSelected] = useState("แผ่นดินไหว");
  const [openPhase, setOpenPhase] = useState(null); // สำหรับเปิด/ปิดแต่ละ phase

  const guides = {
    "แผ่นดินไหว": {
      "ก่อนเกิดเหตุ": [
        "ตรวจสอบความแข็งแรงของอาคารและของแขวน",
        "เตรียมถุงยังชีพ (ไฟฉาย, วิทยุ, น้ำ, อาหารแห้ง)",
        "ฝึกซ้อม “หมอบ–หลบ–จับ” (Drop, Cover, Hold On)",
        "รู้จุดอพยพและเส้นทางปลอดภัย"
      ],
      "ขณะเกิดเหตุ": [
        "หมอบใต้โต๊ะหรือเฟอร์นิเจอร์แข็งแรง → ป้องกันวัตถุหล่นทับ",
        "อย่าใช้ลิฟต์ → ป้องกันติดค้างหรือลิฟต์เสียหาย",
        "หากอยู่นอกอาคาร ให้อยู่ห่างจากตึก เสาไฟ และต้นไม้",
        "หากอยู่บนถนน ให้ยืนห่างจากเสาไฟฟ้าและเส้นทางยานพาหนะ",
        "ปิดเตาแก๊สและไฟฟ้าเมื่อปลอดภัย (ห้ามเสี่ยงชีวิตระหว่างแผ่นดินไหว)"
      ],
      "หลังเกิดเหตุ": [
        "ระวังอาฟเตอร์ช็อก",
        "ตรวจสอบผู้บาดเจ็บและให้ความช่วยเหลือ",
        "อย่าเข้าอาคารที่แตกร้าว",
        "ฟังประกาศจากหน่วยงานทางการก่อนกลับเข้าพื้นที่"
      ]
    },

    "คลื่นสึนามิ": {
      "ก่อนเกิดเหตุ": [
        "1. รู้เส้นทางอพยพขึ้นที่สูงในพื้นที่ชายฝั่ง",
        "2. ฝึกซ้อมการหนีภัยกับครอบครัว",
        "3. เตรียมของจำเป็น เช่น วิทยุพกพา โทรศัพท์ชาร์จเต็ม",
        "4. ทำความเข้าใจสัญญาณเตือนภัยและระบบแจ้งเตือนในพื้นที่",
      ],
      "ขณะเกิดเหตุ": [
        "1. ฟังสัญญาณเตือนภัยและเตรียมอพยพทันที",
        "2. เคลื่อนที่ขึ้นที่สูงตามเส้นทางที่กำหนด",
        "3. หากอยู่ในน้ำ พยายามว่ายไปในทิศทางที่คลื่นน้อยที่สุด",
        "4. ช่วยเหลือผู้ที่อาจติดอยู่ใกล้ตัวเองแต่ปลอดภัย",
      ],
      "หลังเกิดเหตุ": [
        "1. ห้ามกลับลงไปที่ชายหาดจนกว่าจะมีประกาศปลอดภัย",
        "2. ระวังคลื่นซ้ำและน้ำท่วมบริเวณชายฝั่ง",
        "3. ให้การช่วยเหลือผู้ประสบภัยตามคำสั่งเจ้าหน้าที่",
        "4. ตรวจสอบบ้านเรือนและพื้นที่ก่อนกลับเข้าอยู่อาศัย",
      ],
    },
  
    "น้ำท่วม": {
      "ก่อนเกิดเหตุ": [
        "1. ย้ายของมีค่าและเครื่องใช้ไฟฟ้าไว้ที่สูง",
        "2. เตรียมถุงยังชีพ น้ำดื่ม อาหาร ยา",
        "3. ปิดสวิตช์ไฟและแก๊สก่อนน้ำท่วมถึง",
        "4. ตรวจสอบเส้นทางอพยพและที่พักชั่วคราว",
      ],
      "ขณะเกิดเหตุ": [
        "1. อย่าเดินหรือลุยน้ำที่มีระดับเกินหัวเข่า",
        "2. ตัดไฟทันทีเมื่อเห็นน้ำเริ่มเข้าบ้าน",
        "3. อพยพขึ้นที่สูงหรือไปศูนย์พักพิง",
        "4. ระวังงูและสัตว์มีพิษในน้ำ",
      ],
      "หลังเกิดเหตุ": [
        "1. ตรวจสอบระบบไฟฟ้าและอาคารก่อนเข้า",
        "2. ดื่มเฉพาะน้ำสะอาดหรือน้ำต้มสุก",
        "3. ทำความสะอาดบ้านและพื้นที่น้ำท่วม",
        "4. ติดตามข่าวสารและคำแนะนำจากเจ้าหน้าที่",
      ],
    },
  
    "พายุ": {
      "ก่อนเกิดเหตุ": [
        "1. ตรวจสอบข่าวพยากรณ์อากาศและเตือนภัย",
        "2. เสริมความแข็งแรงของหลังคา หน้าต่าง และประตู",
        "3. เตรียมไฟฉายและแบตเตอรี่สำรอง",
        "4. เก็บสิ่งของที่อาจปลิวได้ในที่ปลอดภัย",
      ],
      "ขณะเกิดเหตุ": [
        "1. อยู่ในอาคารที่มั่นคง ห่างจากหน้าต่างและกระจกแตกง่าย",
        "2. ระวังวัตถุที่ลอยมาและแรงลม",
        "3. อย่าออกนอกบ้านหรือใกล้เสาไฟฟ้า ต้นไม้ และสิ่งที่อาจล้มได้",
        "4. เตรียมพร้อมเคลื่อนย้ายไปที่ปลอดภัยตามคำสั่งเจ้าหน้าที่",
      ],
      "หลังเกิดเหตุ": [
        "1. ระวังสายไฟขาดและของหล่นจากที่สูง",
        "2. ตรวจสอบความเสียหายของอาคารก่อนกลับเข้าพื้นที่",
        "3. อย่าเข้าใกล้พื้นที่น้ำท่วม หรือต้นไม้ล้ม",
        "4. ปฏิบัติตามคำแนะนำจากเจ้าหน้าที่เพื่อความปลอดภัย",
      ],
    },
  
    "ไฟป่า": {
      "ก่อนเกิดเหตุ": [
        "1. กำจัดวัชพืชแห้งรอบบ้าน",
        "2. เตรียมผ้าชุบน้ำหรือหน้ากากป้องกันควัน",
        "3. เก็บของสำคัญไว้ในที่พร้อมอพยพ",
        "4. วางแผนเส้นทางอพยพฉุกเฉินล่วงหน้า",
      ],
      "ขณะเกิดเหตุ": [
        "1. เคลื่อนออกจากพื้นที่ไฟป่าไปทางตรงข้ามลม",
        "2. ปิดประตูหน้าต่างให้แน่นเมื่อหนีไฟ",
        "3. ใช้ผ้าชุบน้ำหรือหน้ากากป้องกันควัน",
        "4. อย่าอยู่ในจุดที่ควันหนาหรือไฟลุกแรง",
      ],
      "หลังเกิดเหตุ": [
        "1. ระวังไฟปะทุซ้ำ",
        "2. อย่ากลับเข้าบ้านจนกว่าจะได้รับอนุญาต",
        "3. ตรวจสอบสุขภาพจากการสูดควัน",
        "4. ทำความสะอาดบ้านและพื้นที่โดยระมัดระวัง",
      ],
    },
  
    "ดินถล่ม": {
      "ก่อนเกิดเหตุ": [
        "1. หลีกเลี่ยงการตัดต้นไม้บนทางลาด",
        "2. เฝ้าสังเกตดินแตกร้าว น้ำขุ่น หรือเสียงดินเคลื่อน",
        "3. เตรียมพร้อมอพยพหากฝนตกหนักต่อเนื่อง",
        "4. วางแผนเส้นทางหนีภัยและที่สูงในบริเวณบ้าน",
      ],
      "ขณะเกิดเหตุ": [
        "1. อพยพออกจากพื้นที่ลาดชันทันที",
        "2. อย่าวิ่งตามแนวทางน้ำหรือดินถล่ม",
        "3. หาที่สูงและมั่นคงอยู่",
        "4. ระวังดินถล่มซ้ำและอย่าเข้าใกล้พื้นที่อันตราย",
      ],
      "หลังเกิดเหตุ": [
        "1. อย่าเข้าใกล้พื้นที่ที่ยังไม่ปลอดภัย",
        "2. ตรวจสอบความเสียหายของบ้านและถนน",
        "3. ฟังคำแนะนำจากเจ้าหน้าที่ก่อนกลับพื้นที่",
        "4. ให้ความช่วยเหลือผู้ที่ได้รับผลกระทบตามความสามารถ",
      ],
    },
    // ... ใส่ภัยพิบัติอื่น ๆ ตามโครงสร้างเดียวกัน
    "อื่นๆ": [
      "🔥 ไฟไหม้: ปิดแก๊สและไฟ, ใช้ผ้าชุบน้ำคลุมตัวหนี, โทรแจ้ง 199",
      "💀 สารเคมีรั่วไหล: ปิดจมูกและปากด้วยผ้าเปียก, เคลื่อนย้ายไปพื้นที่อากาศถ่ายเท",
      "☀️ ภัยแล้ง: กักเก็บน้ำ, ใช้น้ำอย่างประหยัด, หลีกเลี่ยงการเผาในพื้นที่โล่ง"
    ]
  };

  return (
    <div className="min-h-screen bg-gradient-to-b from-black via-gray-900 to-red-900 text-white p-6 md:p-12">
      <h2 className="text-3xl font-bold mb-6 text-center">📖 คู่มือรับมือภัยพิบัติ</h2>

      {/* เลือกประเภทภัยพิบัติ */}
      <div className="flex flex-wrap gap-3 justify-center mb-8">
        {Object.keys(guides).map((type) => (
          <button
            key={type}
            onClick={() => {
              setSelected(type);
              setOpenPhase(null); // ปิด accordion เดิมเมื่อเปลี่ยนประเภท
            }}
            className={`px-4 py-2 rounded-lg font-medium shadow-lg transition ${
              selected === type
                ? "bg-red-600 text-white scale-105"
                : "bg-gray-700 hover:bg-gray-600"
            }`}
          >
            {type}
          </button>
        ))}
      </div>

      {/* เนื้อหาคู่มือ */}
      <div className="bg-gray-800 bg-opacity-70 shadow-xl p-6 rounded-xl max-w-3xl mx-auto">
        <h3 className="text-2xl font-semibold mb-4">📝 วิธีรับมือ: {selected}</h3>

        {Array.isArray(guides[selected]) ? (
          // กรณีเป็น array (เช่น "อื่นๆ")
          <ul className="list-disc pl-6 space-y-3 text-lg">
            {guides[selected].map((item, idx) => (
              <li key={idx}>{item}</li>
            ))}
          </ul>
        ) : (
          // กรณีเป็น object (เช่น แผ่นดินไหว, น้ำท่วม)
          Object.entries(guides[selected]).map(([phase, steps]) => (
            <div key={phase} className="mb-4">
              <button
                onClick={() =>
                  setOpenPhase(openPhase === phase ? null : phase)
                }
                className="w-full text-left text-xl font-semibold mb-2 bg-gray-700 rounded-lg px-4 py-2 hover:bg-gray-600 transition"
              >
                {phase}
              </button>
              {openPhase === phase && (
                <ul className="list-disc pl-6 space-y-1 text-lg mt-2">
                  {steps.map((step, i) => (
                    <li key={i}>{step}</li>
                  ))}
                </ul>
              )}
            </div>
          ))
        )}
      </div>
    </div>
  );
}
